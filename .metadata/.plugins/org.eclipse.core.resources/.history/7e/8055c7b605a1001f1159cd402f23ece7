package testing;

public class Test1 {

	public static int hash(int key, int i, int m) {
		int h1 = h1(key, m);
		int h2 = h2(key, m);
		return (h1 + i * h2) % m;
	}

	public static int h1(int key, int m) {
		return key % m;
	}

	public static int h2(int key, int m) {
		return (key % (m - 1)) + 1;
	}

	public static void main(String[] args) {
		int m = 7; // This is still used for hash function calculations
		int n = 6; // Desired length of the hash table

		int[] keys = { 3, 17, 6, 12, 5, 27 };

		// Hash table (array) of size n
		int[] hashTable = new int[n];

		// Insert keys into the hash table
		for (int key : keys) {
			int i = 0;
			int index = hash(key, i, m);
			while (hashTable[index % n] != 0) { // Modulo n to ensure index is within bounds
				i++;
				index = hash(key, i, m);
			}
			hashTable[index % n] = key;
		}

		// Print the hash table
		System.out.println("Hash Table:");
		for (int i = 0; i < n; i++) {
			System.out.println("Index " + i + ": " + hashTable[i]);
		}
	}

}